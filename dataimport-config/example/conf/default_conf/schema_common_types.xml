<!--
    Copyright 2016 DLR - German Aerospace Center
   
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
   
    http://www.apache.org/licenses/LICENSE-2.0
   
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
 -->
<!-- The StrField type is not analyzed, but indexed/stored verbatim. It supports 
	doc values but in that case the field needs to be single-valued and either 
	required or have a default value. -->
<fieldType name="string" class="solr.StrField"
	sortMissingLast="true" />
<fieldType name="float" class="solr.TrieFloatField"
	precisionStep="0" positionIncrementGap="0" />
<fieldType name="long" class="solr.TrieLongField"
	precisionStep="0" positionIncrementGap="0" />
<fieldType name="tdate" class="solr.TrieDateField"
	precisionStep="6" positionIncrementGap="0" />
<fieldType name="boolean" class="solr.BoolField" sortMissingLast="true"/>
<!-- A general text field that has reasonable, generic cross-language defaults: 
	it tokenizes with StandardTokenizer, removes stop words from case-insensitive 
	and down cases. At query time only, it also applies synonyms. -->
<fieldType name="text_general" class="solr.TextField"
	positionIncrementGap="100">
	<analyzer type="index">
		<tokenizer class="solr.StandardTokenizerFactory" />
		<filter class="solr.StopFilterFactory" ignoreCase="true"
			words="default_conf/lang/stopwords_en.txt" />
		<filter class="solr.LowerCaseFilterFactory" />
	</analyzer>
	<analyzer type="query">
		<tokenizer class="solr.StandardTokenizerFactory" />
		<filter class="solr.StopFilterFactory" ignoreCase="true"
			words="default_conf/lang/stopwords_en.txt" />
		<filter class="solr.SynonymFilterFactory" synonyms="default_conf/lang/synonyms.txt"
			ignoreCase="true" expand="true" />
		<filter class="solr.LowerCaseFilterFactory" />
	</analyzer>
</fieldType>
<!-- This is an example of using the KeywordTokenizer along With various 
	TokenFilterFactories to produce a sortable field that does not include some 
	properties of the source text -->
<fieldType name="alphaOnlySort" class="solr.TextField"
	sortMissingLast="true" omitNorms="true">
	<analyzer>
		<!-- KeywordTokenizer does no actual tokenizing, so the entire input string 
			is preserved as a single token -->
		<tokenizer class="solr.KeywordTokenizerFactory" />
		<!-- The LowerCase TokenFilter does what you expect, which can be when 
			you want your sorting to be case insensitive -->
		<filter class="solr.LowerCaseFilterFactory" />
		<!-- The TrimFilter removes any leading or trailing whitespace -->
		<filter class="solr.TrimFilterFactory" />
		<!-- The PatternReplaceFilter gives you the flexibility to use Java Regular 
			expression to replace any sequence of characters matching a pattern with 
			an arbitrary replacement string, which may include back references to portions 
			of the original string matched by the pattern. See the Java Regular Expression 
			documentation for more information on pattern and replacement string syntax. 
			http://java.sun.com/j2se/1.6.0/docs/api/java/util/regex/package-summary.html -->
		<filter class="solr.PatternReplaceFilterFactory" pattern="([^a-z])"
			replacement="" replace="all" />
	</analyzer>
</fieldType>
<!-- since fields of this type are by default not stored or indexed, any 
	data added to them will be ignored outright. -->
<fieldtype name="ignored" stored="false" indexed="false"
	multiValued="true" class="solr.StrField" />